#!/bin/bash
#
# Copyright (c) 2012 Tom Grennan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/ .

t0201_description="A single network of two hosts with ospf"
read -d '' t0201_diagram <<-"EOF"
	\\th1 [10.100.0.1]     [10.100.0.2] h2
	\\t   [10.100.1.1] --- [10.100.1.2]
EOF

t0201_hosts="h1 h2"
t0201_h1="10.100.0.1"
t0201_h2="10.100.0.2"
t0201_h1_lo="$t0201_h1/32"
t0201_h2_lo="$t0201_h2/32"
t0201_nets="n1"
t0201_n1_hosts="h1 h2"
t0201_h1_n1="10.100.1.1/30 broadcast 10.100.1.3"
t0201_h2_n1="10.100.1.2/30 broadcast 10.100.1.3"

read -d '' t0201_Quagga <<-"EOF"
	router ospf
	 router-id $router_id
	 redistribute connected route-map just-this-host
	 passive-interface default
	 no passive-interface n1
	 network $network_n1 area 0
	access-list just-this-host permit $network_lo
	route-map just-this-host permit 10
	 match ip address just-this-host
EOF

for host in $t0201_hosts ; do
	eval router_id=\$t0201_${host}
	eval network_lo=\$t0201_${host}_lo
	eval network_n1='${t0201_'${host}'_n1%% *}'
	eval t0201_${host}_Quagga=\""$t0201_Quagga"\"
done

source ${0%/*}/netns

may say info OSPF may take up to 60 seconds to converge.
caption convergence retry 60 expect output="\'$t0201_h2 via*\'" \
	on h1 ip route list $t0201_h2
caption 'ping h2' expect ok on h1 ping -A -c5 -w2 h2 >/dev/null
caption 'ping h1' expect ok on h1 ping -A -c5 -w2 h1 >/dev/null
