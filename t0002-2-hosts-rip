#!/bin/bash
#
# Copyright (c) 2012 Tom Grennan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/ .

. ${0%/*}/netns-lib

t0002_description="A single network of two hosts with ripd."
read -d '' t0002_diagram <<-"EOF"
	\\th1 [10.100.0.1]     [10.100.0.2] h2
	\\t   [10.100.1.1] --- [10.100.1.2]
EOF
read -d '' t0002_hostnames <<-EOF
	127.0.0.1	localhost
	::1		ip6-localhost	ip6-loopback
	fe00::0		ip6-localnet
	ff00::0		ip6-mcasttopology
	ff02::1 	ip6-allnodes
	ff02::2		ip6-allrouters

	10.100.0.1	h1
	10.100.0.2	h2
EOF
t0002_hosts="h1 h2"
t0002_nets="n1"
t0002_n1_hosts="h1 h2"

read -d '' t0002_h1_lo <<-EOF
	127.0.0.1/8
	::1/128
	10.100.0.1/32
EOF
read -d '' t0002_h2_lo <<-EOF
	127.0.0.1/8
	::1/128
	10.100.0.2/32
EOF
read -d '' t0002_h1_n1 <<-EOF
	10.100.1.1/30 broadcast 10.100.0.3
EOF
read -d '' t0002_h2_n1 <<-EOF
	10.100.1.2/30 broadcast 10.100.0.3
EOF

read -d '' t0002_h1_Quagga <<-EOF 
	interface lo
	 description host h1
	 link-detect
	interface n1
	 description connected to n1
	 link-detect
	!
	!debug rip events
	!debug rip packet
	!
	router rip
	 network 10.100.1.0/30
	 network eth0
	 route 10.100.0.1/32
	! distribute-list private-only in n1
	!
	!access-list private-only permit 10.0.0.0/8
	!access-list private-only deny any
EOF

read -d '' t0002_h2_Quagga <<-EOF
	interface lo
	 description host h2
	 link-detect
	interface n1
	 description connected to n1
	 link-detect
	!
	!debug rip events
	!debug rip packet
	!
	router rip
	 network 10.100.1.0/30
	 network eth0
	 route 10.100.0.2/32
	! distribute-list private-only in n1
	!
	!access-list private-only permit 10.0.0.0/8
	!access-list private-only deny any
EOF

netns '' enable-ip-forward
netns '' start
netns '' wait-for-route h1 10.100.0.2/32
netns 'h1 ping h2' nullout exec h1 ping -A -q -c 5 -w 2 h2
netns 'h2 ping h1' nullout exec h2 ping -A -q -c 5 -w 2 h1
netns '' stop
